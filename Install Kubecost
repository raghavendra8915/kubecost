Configureing the EKS cluster in EC2 node or local system
aws eks update-kubeconfig --name kubecostdemo --region us-west-2

Validating the aws credentials configured or not
aws sts get-caller-identity

##################### Create AWS EKS clsuster ################################################################################
## Create EKS cluster
eksctl create cluster --name kubecostdemo --node-type t3.large --nodes 3 --nodes-min 2 --nodes-max 3 --region us-west-2 --zones=us-west-2a,us-west-2b --version=1.24

## Get EKS Cluster service
eksctl get cluster --name kubecostdemo --region us-west-2

## Update Kubeconfig 
aws eks update-kubeconfig --name kubecostdemo

## Get EKS Pod data.
kubectl get pods --all-namespaces

## Delete EKS cluster
eksctl delete cluster --name kubecostdemo --region us-west-2

################################### Install kubecost ######################################################################################
   Create the IAM OICD Provider for the cluster
1. eksctl utils associate-iam-oidc-provider --cluster kubecostdemo --approve

   Create the Service Account for needed for ebs-csi-driver and that account has the IAM policy
2. eksctl create iamserviceaccount --name ebs-csi-controller-sa --namespace kube-system --cluster "kubecostdemo" --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy --approve --role-only --role-name AmazonEKS_EBS_CSI_DriverRole

   get the ARN of the role
3. aws iam get-role --role-name AmazonEKS_EBS_CSI_DriverRole --output json

   create the addon i.e aws-ebi-csi-driver
4. eksctl create addon --name aws-ebs-csi-driver --cluster "kubecostdemo" --service-account-role-arn "arn:aws:iam::211125390319:role/AmazonEKS_EBS_CSI_DriverRole" --force

  Install the kubecost using helm
5. helm upgrade -i kubecost oci://public.ecr.aws/kubecost/cost-analyzer --version="1.104.4" --namespace kubecost --create-namespace -f https://raw.githubusercontent.com/kubecost/cost-analyzer-helm-chart/develop/cost-analyzer/values-eks-cost-monitoring.yaml --set prometheus.configmapReload.prometheus.enabled="false"

6. kubectl get pods -n kubecost

7. kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 9090

8. http://localhost:9090
